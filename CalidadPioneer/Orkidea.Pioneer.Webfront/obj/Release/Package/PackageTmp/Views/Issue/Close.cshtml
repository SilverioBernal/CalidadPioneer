@model Orkidea.Pioneer.Webfront.Models.vmIssue

@{
    ViewBag.Title = "Sistema de gestión - Cierre de Hallazgos";
}

<style>
    .error {
        color: red;
        font-weight: normal;
    }
</style>

<h2>Sistema de gestión - Cierre de Hallazgos</h2>

<div class="row">
    <div class="col-md-6">
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.idTaladro, "Ubicacion", new { @for = "idUbicacion", @class = "control-label" })
                    @Html.DropDownListFor(model => model.idTaladro, new SelectList(Model.lsUbicaion, "id", "descripcion"), "Seleccione", new { @class = "form-control", style = "max-width:100%", disabled = "disabled" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.fuente, "Fuente", new { @for = "fuente" })
                    @Html.TextBoxFor(model => model.fuente, new { @class = "form-control", style = "max-width:100%", readOnly = true })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.nombreReportador, "Nombre de quien reporta", new { @for = "nombreReportador" })
                    @Html.TextBoxFor(model => model.nombreReportador, new { @class = "form-control", style = "max-width:100%", readOnly = true })
                </div>

            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.cargoReportador, "Cargo reportador", new { @for = "cargoReportador" })
                    @Html.TextBoxFor(model => model.cargoReportador, new { @class = "form-control", style = "max-width:100%", readOnly = true })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.empresaReportador, "Empresa reportador", new { @for = "empresaReportador" })
                    @Html.TextBoxFor(model => model.empresaReportador, new { @class = "form-control", style = "max-width:100%", readOnly = true })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.fechaReporte, "Fecha reporte", new { @for = "fechaReporte" })
                    @{
                        string fechaReporte = Model.fechaReporte.ToString("yyyy-MM-dd");
                    }
                    @Html.TextBox("fechaApertura", @fechaReporte, new { @class = "form-control", style = "max-width:100%", readOnly = true })


                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.descripcion, "Descripción", new { @for = "descripcion", @class = "required" })
                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control col-md-12", readOnly = true })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Label("Registro Fotográfico")
                    <img src="@Url.Action("GetPhoto", new {archivo = Model.fotoAntes})" class="img-responsive" />
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Label("Detalle de la gestión")
                    <table class="table table-bordered table-striped table_vam" id="dt">
                        <thead>
                            <tr>
                                <th>Registrado</th>
                                <th>Responsable</th>
                                <th>Acción Correctiva/Preventiva</th>
                                <th>Cierre propuesto</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.IssueDetail)
                            {
                                <tr>
                                    <td>@item.fechaRegistro.ToString("yyyy-MM-dd")</td>
                                    <td>@item.responsable</td>
                                    <td>@item.accion </td>
                                    <td>@item.fechaPropuestaCierre.ToString("yyyy-MM-dd") </td>
                                    <td>
                                        <a href="@Url.Action("Analize", "Issue", new { id = item.id })" class="sepV_a" title="Analizar"><i class="fa fa-magic"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            @using (Html.BeginForm("Close", "Issue", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.comentariosCierre, "Comentarios cierre", new { @for = "comentariosCierre", @class = "required" })
                            @Html.TextAreaFor(model => model.comentariosCierre, new { @class = "form-control col-md-12" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.fotoAntes, "Foto", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.File, new { type = "file", @class = "btn btn-primary", title = "Seleccione la foto", accept = "image/*" })
                        </div>
                    </div>
                </div>
                <div id="uploaded" class="row">
                </div>
                <div class="row">
                    <div class="form-group">

                        <input type="submit" value="Guardar" class="btn btn-info" />

                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $('#dt').dataTable({
        "language": {
            "lengthMenu": "Mostrar _MENU_ registros por pagina",
            "zeroRecords": "Ningun resultado encontrado",
            "info": "Página _PAGE_ de _PAGES_",
            "infoEmpty": "Sin registros",
            "infoFiltered": "(filtered from _MAX_ total records)",
            "search": "Buscar:",
            "paginate": {
                "first": "Primera",
                "last": "Ultima",
                "next": "Siguiente",
                "previous": "Anterior"
            },
        }
    });
</script>

<script>
    $(document).ready(function () {

        $('form').validate({
            rules: {
                comentariosCierre: {
                    required: true
                },
                File: {
                    required: true
                },
            },
            messages: {
                comentariosCierre: {
                    required: "Ingrese un comentario"
                },
                File: {
                    required: "Ingrese una foto"
                }
            },
        });
    });
</script>

<!-- plupload and all it's runtimes and the jQuery queue widget (attachments) -->
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>*@
<script src="http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.js"></script>


<script>
    //<![CDATA[
    $(function () {
        $.fn.bootstrapFileInput = function () {
            this.each(function (i, elem) {
                var $elem = $(elem); if (typeof $elem.attr('data-bfi-disabled') != 'undefined') { return; }
                var buttonWord = 'Browse'; if (typeof $elem.attr('title') != 'undefined') { buttonWord = $elem.attr('title'); }
                var className = ''; if (!!$elem.attr('class')) { className = ' ' + $elem.attr('class'); }
                $elem.wrap('<a class="file-input-wrapper btn btn-default ' + className + '"></a>').parent().prepend(buttonWord);
            }).promise().done(function () {
                $('.file-input-wrapper').mousemove(function (cursor) { var input, wrapper, wrapperX, wrapperY, inputWidth, inputHeight, cursorX, cursorY; wrapper = $(this); input = wrapper.find("input"); wrapperX = wrapper.offset().left; wrapperY = wrapper.offset().top; inputWidth = input.width(); inputHeight = input.height(); cursorX = cursor.pageX; cursorY = cursor.pageY; moveInputX = cursorX - wrapperX - inputWidth + 20; moveInputY = cursorY - wrapperY - (inputHeight / 2); input.css({ left: moveInputX, top: moveInputY }); }); $('body').on('change', '.file-input-wrapper input[type=file]', function () {
                    var fileName; fileName = $(this).val(); $(this).parent().next('.file-input-name').remove(); if (!!$(this).prop('files') && $(this).prop('files').length > 1) { fileName = $(this)[0].files.length + ' files'; }
                    else { fileName = fileName.substring(fileName.lastIndexOf('\\') + 1, fileName.length); }
                    $(this).parent().after('<span class="file-input-name">' + fileName + '</span>');
                });
            });
        }; var cssHtml = '<style>' + '.file-input-wrapper { overflow: hidden; position: relative; cursor: pointer; z-index: 1; }' + '.file-input-wrapper input[type=file], .file-input-wrapper input[type=file]:focus, .file-input-wrapper input[type=file]:hover { position: absolute; top: 0; left: 0; cursor: pointer; opacity: 0; filter: alpha(opacity=0); z-index: 99; outline: 0; }' + '.file-input-name { margin-left: 8px; }' + '</style>'; $('link[rel=stylesheet]').eq(0).before(cssHtml);
    });
    //]]></script>
<script>$(document).ready(function () { $('input[type=file]').bootstrapFileInput(); });</script>